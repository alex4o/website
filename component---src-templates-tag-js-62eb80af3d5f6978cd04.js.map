{"version":3,"sources":["webpack:///./src/templates/tag.js"],"names":["TagTemplate","data","location","pageContext","useState","console","log","BlogItem","elements","allMarkdownRemark","nodes","map","node","id","title","frontmatter","fields","slug","description","excerpt","date","tags","element"],"mappings":"4FAAA,sGAoCeA,UA1BK,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,SAA4B,KAAlBC,YAETC,mBAAS,OAFkB,UAGrDC,QAAQC,IAAIL,EAAMC,EAAUK,KAC5B,IAIMC,EAJQP,EAAKQ,kBAAkBC,MAIdC,KAAI,SAACC,GAAD,MAAW,CAClCC,GAAID,EAAKC,GACTC,MAAOF,EAAKG,YAAYD,OAASF,EAAKI,OAAOC,KAC7CA,KAAML,EAAKI,OAAOC,KAClBC,YAAaN,EAAKG,YAAYG,aAAeN,EAAKO,QAClDC,KAAMR,EAAKG,YAAYK,KACvBC,KAAOT,EAAKG,YAAYM,MAAQ,OAGpC,OACI,kBAAC,IAAD,CAAQP,MAAM,8DACV,kBAAC,IAAD,CAAKA,MAAM,SACVN,EAASG,KAAI,SAACW,GAAD,OACV,kBAAC,IAAaA","file":"component---src-templates-tag-js-62eb80af3d5f6978cd04.js","sourcesContent":["import React, { useState } from \"react\"\nimport { StaticQuery, graphql, Link } from \"gatsby\"\nimport { useFlexSearch } from 'react-use-flexsearch'\n\nimport Layout from \"../components/layout/\"\nimport SEO from \"../components/seo\"\nimport SearchContext from \"../context/search\"\n\nimport BlogItem from \"../components/blog-item\"\n\nconst TagTemplate = ({ data, location, pageContext }) => {\n\n    const [query, setQuery] = useState(null)\n    console.log(data, location, BlogItem)\n    const posts = data.allMarkdownRemark.nodes\n    // console.log(results, query, data.localSearchPosts)\n\n\n    const elements = posts.map((node) => ({\n        id: node.id,\n        title: node.frontmatter.title || node.fields.slug,\n        slug: node.fields.slug,\n        description: node.frontmatter.description || node.excerpt,\n        date: node.frontmatter.date,\n        tags: (node.frontmatter.tags || [])\n    }))\n\n    return (\n        <Layout title=\"A blog exploring the magic of wired hardware and software.\">\n            <SEO title=\"Blog\" />\n            {elements.map((element) =>\n                <BlogItem {...element}></BlogItem>)}\n        </Layout>\n    )\n}\n\nexport default TagTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostByTag($tag: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(filter: { fields: { tags: { in: [$tag] }}}) {\n      nodes {\n        id\n        excerpt(pruneLength: 160)\n        fields {\n            slug\n        }\n        html\n        frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            tags\n            description\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}